{"version":3,"sources":["scripts/main.js"],"names":["Game","game","fieldRows","document","querySelectorAll","startButton","querySelector","highScoreValue","bestScore","gameScore","gameStartMessage","gameLoseMessage","gameWinMessage","score","gameOver","restartHandler","bind","startHandler","keyHandler","touchStartHandler","touchEndHandler","verticalUp","verticalDown","horizontalLeft","horizontalRight","addNumber","calculateScore","startCoords","x","y","field","addEventListener","removeEventListener","classList","add","remove","innerText","play","j","length","i","addNumberOnField","setScore","e","preventDefault","screenX","screenY","changedTouches","copyField","flat","mouseUpX","mouseUpY","deltaX","deltaY","Math","abs","fieldAfterMove","checkOnLose","checkOnWin","key","currentScore","actions","cellLeft","cellRight","cellUp","cellDown","number","workingCell","children","className","reduce","a","c","posX","posY","haveZero","findEmpty","some","elem","newNumber","calculateChance","cellToAdd","random","includes","checkOnConnect","currentCell","map","cell","trunc","gameField","newGame","start"],"mappings":"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","file":"main.3bc300e3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nclass Game {\n  constructor(game) {\n    this.fieldRows = document.querySelectorAll('.field-row');\n    this.game = game;\n    this.startButton = document.querySelector('.start');\n    this.highScoreValue = 0;\n    this.bestScore = document.querySelector('.best-score');\n    this.gameScore = document.querySelector('.game-score');\n    this.gameStartMessage = document.querySelector('.message-start');\n    this.gameLoseMessage = document.querySelector('.message-lose');\n    this.gameWinMessage = document.querySelector('.message-win');\n    this.score = 0;\n    this.gameOver = false;\n    this.restartHandler = this.restartHandler.bind(this);\n    this.startHandler = this.startHandler.bind(this);\n    this.keyHandler = this.keyHandler.bind(this);\n    this.touchStartHandler = this.touchStartHandler.bind(this);\n    this.touchEndHandler = this.touchEndHandler.bind(this);\n    this.verticalUp = this.verticalUp.bind(this);\n    this.verticalDown = this.verticalDown.bind(this);\n    this.horizontalLeft = this.horizontalLeft.bind(this);\n    this.horizontalRight = this.horizontalRight.bind(this);\n    this.addNumber = this.addNumber.bind(this);\n    this.calculateScore = this.calculateScore.bind(this);\n\n    this.startCoords = {\n      x: 0,\n      y: 0,\n    };\n\n    this.field = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n  }\n\n  start() {\n    this.startButton.addEventListener('click', this.startHandler);\n    this.startButton.addEventListener('touchend', this.startHandler);\n  }\n\n  play() {\n    this.addNumber();\n    this.addNumber();\n\n    this.startButton.removeEventListener('click', this.startHandler);\n    this.startButton.removeEventListener('touchend', this.startHandler);\n    this.gameStartMessage.classList.add('hidden');\n\n    document.addEventListener('keyup', this.keyHandler);\n    document.addEventListener('mousedown', this.touchStartHandler);\n    document.addEventListener('mouseup', this.touchEndHandler);\n    document.addEventListener('touchstart', this.touchStartHandler);\n    document.addEventListener('touchend', this.touchEndHandler);\n\n    this.startButton.addEventListener('click', this.restartHandler);\n    this.startButton.addEventListener('touchend', this.restartHandler);\n  }\n\n  startHandler() {\n    this.startButton.classList.remove('start');\n    this.startButton.classList.add('restart');\n    this.startButton.innerText = 'Restart';\n    this.gameWinMessage.classList.add('hidden');\n    this.gameLoseMessage.classList.add('hidden');\n\n    this.play();\n  }\n\n  restartHandler() {\n    if (this.highScoreValue < this.score) {\n      this.highScoreValue = this.score;\n      this.bestScore.innerText = `${this.highScoreValue}`;\n    }\n\n    this.field = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    for (let j = 0; j < this.field.length; j++) {\n      for (let i = 0; i < this.field[0].length; i++) {\n        this.addNumberOnField(j, i);\n      }\n    }\n\n    this.score = 0;\n\n    this.setScore(this.score);\n\n    this.addNumber();\n    this.addNumber();\n\n    this.gameWinMessage.classList.add('hidden');\n    this.gameLoseMessage.classList.add('hidden');\n  }\n\n  touchStartHandler(e) {\n    e.preventDefault();\n\n    this.startCoords.x = e.screenX;\n    this.startCoords.y = e.screenY;\n\n    if (e.changedTouches) {\n      this.startCoords.x = e.changedTouches[0].screenX;\n      this.startCoords.y = e.changedTouches[0].screenY;\n    }\n\n    return this.startCoords;\n  }\n\n  touchEndHandler(e) {\n    e.preventDefault();\n\n    const copyField = [...this.field].flat();\n\n    let mouseUpX = e.screenX;\n    let mouseUpY = e.screenY;\n\n    if (e.changedTouches) {\n      mouseUpX = e.changedTouches[0].screenX;\n      mouseUpY = e.changedTouches[0].screenY;\n    }\n\n    const deltaX = this.startCoords.x - mouseUpX;\n    const deltaY = this.startCoords.y - mouseUpY;\n\n    if (Math.abs(deltaX) < 30 && Math.abs(deltaY) < 30) {\n      return;\n    }\n\n    if (Math.abs(deltaY) > Math.abs(deltaX)) {\n      if (deltaY > 0) {\n        this.verticalUp();\n      } else {\n        this.verticalDown();\n      }\n    } else {\n      if (deltaX > 0) {\n        this.horizontalLeft();\n      } else {\n        this.horizontalRight();\n      }\n    }\n\n    const fieldAfterMove = [...this.field].flat();\n\n    for (let i = 0; i < copyField.length; i++) {\n      if (copyField[i] !== fieldAfterMove[i]) {\n        this.addNumber();\n        break;\n      }\n    }\n\n    this.setScore(this.score);\n    this.checkOnLose();\n    this.checkOnWin();\n  }\n\n  keyHandler(e) {\n    const copyField = [...this.field].flat();\n\n    switch (e.key) {\n      case 'ArrowUp':\n        this.verticalUp();\n        break;\n\n      case 'ArrowDown':\n        this.verticalDown();\n        break;\n\n      case 'ArrowLeft':\n        this.horizontalLeft();\n        break;\n\n      case 'ArrowRight':\n        this.horizontalRight();\n        break;\n\n      default:\n        return;\n    }\n\n    const fieldAfterMove = [...this.field].flat();\n\n    for (let i = 0; i < copyField.length; i++) {\n      if (copyField[i] !== fieldAfterMove[i]) {\n        this.addNumber();\n        break;\n      }\n    }\n\n    this.setScore(this.score);\n    this.checkOnLose();\n    this.checkOnWin();\n  }\n\n  horizontalLeft() {\n    let currentScore = this.score;\n\n    for (let j = 0; j < this.field.length;) {\n      let actions = 0;\n\n      for (let i = 1; i < this.field[0].length; i++) {\n        const cellLeft = this.field[j][i - 1];\n        const cellRight = this.field[j][i];\n\n        if (cellLeft === 0 && cellRight > 0) {\n          this.field[j][i - 1] = this.field[j][i];\n          this.field[j][i] = 0;\n          actions++;\n        }\n\n        if (cellLeft !== 0 && cellLeft === cellRight) {\n          if (actions === 0) {\n            this.field[j][i - 1] = cellLeft + cellRight;\n            currentScore += this.field[j][i - 1];\n            this.field[j][i] = 0;\n          }\n        }\n      }\n\n      if (actions === 0) {\n        for (let i = 0; i < this.field[0].length; i++) {\n          this.addNumberOnField(j, i);\n        }\n\n        j++;\n      }\n\n      this.score = currentScore;\n    }\n  }\n\n  horizontalRight() {\n    let currentScore = this.score;\n\n    for (let j = 0; j < this.field.length;) {\n      let actions = 0;\n\n      for (let i = this.field[0].length - 1; i > 0; i--) {\n        const cellLeft = this.field[j][i - 1];\n        const cellRight = this.field[j][i];\n\n        if (cellRight === 0 && cellLeft > 0) {\n          this.field[j][i] = this.field[j][i - 1];\n          this.field[j][i - 1] = 0;\n          actions++;\n        }\n\n        if (cellRight !== 0 && cellLeft === cellRight) {\n          if (actions === 0) {\n            this.field[j][i] = cellLeft + cellRight;\n            currentScore += this.field[j][i];\n            this.field[j][i - 1] = 0;\n          }\n        }\n      }\n\n      if (actions === 0) {\n        for (let i = 0; i < this.field[0].length; i++) {\n          this.addNumberOnField(j, i);\n        }\n\n        j++;\n      }\n\n      this.score = currentScore;\n    }\n  }\n\n  verticalUp() {\n    let currentScore = this.score;\n\n    for (let i = 0; i < this.field[0].length;) {\n      let actions = 0;\n\n      for (let j = 1; j < this.field.length; j++) {\n        const cellUp = this.field[j - 1][i];\n        const cellDown = this.field[j][i];\n\n        if (cellUp === 0 && cellDown > 0) {\n          this.field[j - 1][i] = this.field[j][i];\n          this.field[j][i] = 0;\n          actions++;\n        }\n\n        if (cellUp !== 0 && cellUp === cellDown) {\n          if (actions === 0) {\n            this.field[j - 1][i] = cellUp + cellDown;\n            currentScore += this.field[j - 1][i];\n            this.field[j][i] = 0;\n          }\n        }\n      }\n\n      if (actions === 0) {\n        for (let j = 0; j < this.field.length; j++) {\n          this.addNumberOnField(j, i);\n        }\n\n        i++;\n      }\n\n      this.score = currentScore;\n    }\n  }\n\n  verticalDown() {\n    let currentScore = this.score;\n\n    for (let i = this.field[0].length - 1; i >= 0;) {\n      let actions = 0;\n\n      for (let j = this.field.length - 1; j > 0; j--) {\n        const cellUp = this.field[j - 1][i];\n        const cellDown = this.field[j][i];\n\n        if (cellDown === 0 && cellUp > 0) {\n          this.field[j][i] = this.field[j - 1][i];\n          this.field[j - 1][i] = 0;\n          actions++;\n        }\n\n        if (cellDown !== 0 && cellUp === cellDown) {\n          if (actions === 0) {\n            this.field[j][i] = cellUp + cellDown;\n            currentScore += this.field[j][i];\n            this.field[j - 1][i] = 0;\n          }\n        }\n      }\n\n      if (actions === 0) {\n        for (let j = 0; j < this.field.length; j++) {\n          this.addNumberOnField(j, i);\n        }\n\n        i--;\n      }\n\n      this.score = currentScore;\n    }\n  }\n\n  addNumberOnField(j, i) {\n    const number = this.field[j][i];\n    const workingCell = this.fieldRows[j].children[i];\n\n    workingCell.className = 'field-cell';\n    workingCell.innerText = '';\n\n    if (number > 0) {\n      workingCell.classList.add(`field-cell--${number}`);\n      workingCell.innerText = number;\n    }\n  }\n\n  calculateScore() {\n    return this.field.flat().reduce((a, c) => a + c, 0);\n  }\n\n  setScore(score) {\n    this.gameScore.innerText = `${score}`;\n  }\n\n  addNumber() {\n    let posX;\n    let posY;\n\n    if (this.haveZero()) {\n      do {\n        posX = this.findEmpty();\n      } while (!(this.field[posX].some(elem => elem === 0)));\n\n      do {\n        posY = this.findEmpty();\n      } while (!(this.field[posX][posY] === 0));\n\n      const newNumber = this.calculateChance();\n      const cellToAdd = this.fieldRows[posX].children[posY];\n\n      cellToAdd.classList.add(`field-cell--${newNumber}`);\n      cellToAdd.innerText = newNumber;\n      this.field[posX][posY] = newNumber;\n    }\n  }\n\n  calculateChance() {\n    return Math.random() > 0.1 ? 2 : 4;\n  }\n\n  checkOnWin() {\n    if (this.field.flat().includes(2048)) {\n      this.gameWinMessage.classList.remove('hidden');\n    }\n  }\n\n  checkOnLose() {\n    if (!this.haveZero() && this.checkOnConnect()) {\n      this.gameLoseMessage.classList.remove('hidden');\n    }\n  }\n\n  checkOnConnect() {\n    for (let j = 0; j < this.field.length; j++) {\n      for (let i = 0; i < this.field[j].length; i++) {\n        const currentCell = this.field[j][i];\n        const cellDown = j < this.field.length - 1\n          ? this.field[j + 1][i]\n          : null;\n        const cellRight = i < this.field[j].length - 1\n          ? this.field[j][i + 1]\n          : null;\n\n        if (currentCell === cellDown || currentCell === cellRight) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  haveZero() {\n    return this.field\n      .map(cell => cell.some(key => key === 0)).some(key => key);\n  }\n\n  findEmpty() {\n    return Math.trunc(4 * Math.random());\n  }\n}\n\nconst gameField = document.querySelector('body');\nconst newGame = new Game(gameField);\n\nnewGame.start();\n"]}